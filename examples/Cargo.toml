#
# Copyright (c) 2017, 2020 ADLINK Technology Inc.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ADLINK zenoh team, <zenoh@adlink-labs.tech>
#
[package]
name = "zenoh-examples"
version = "0.6.0-dev.0"
repository = "https://github.com/eclipse-zenoh/zenoh"
homepage = "http://zenoh.io"
authors = [
	"kydos <angelo@icorsaro.net>",
	"Julien Enoch <julien@enoch.fr>",
	"Olivier HÃ©cart <olivier.hecart@adlinktech.com>",
	"Luca Cominardi <luca.cominardi@adlinktech.com>",
	"Pierre Avital <pierre.avital@adlinktech.com>",
]
edition = "2018"
license = " EPL-2.0 OR Apache-2.0"
categories = ["network-programming"]
description = "Internal crate for zenoh."
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
shared-memory = ["zenoh/shared-memory"]

[dependencies]
zenoh = { path = "../zenoh/" }

async-std = { version = "=1.9.0", default-features = false, features = [
	"attributes",
] }
clap = "2.33.3"
env_logger = "0.9.0"
futures = "0.3.12"
git-version = "0.3.4"
json5 = "0.4.1"
lazy_static = "1.4.0"
log = "0.4"
validated_struct = { version = "0.1", features = ["json5", "serde_json"] }

[dev-dependencies]
rand = "0.8.3"

[build-dependencies]
rustc_version = "0.4.0"

[package.metadata.deb]
name = "zenohd"
maintainer = "zenoh-dev@eclipse.org"
copyright = "2017, 2021 ADLINK Technology Inc."
section = "net"
license-file = ["../LICENSE", "0"]
depends = "$auto"
maintainer-scripts = "zenoh/.deb"
assets = [
	# binary
	["target/release/zenohd", "/usr/bin/", "755"],
	# service
	[".service/zenohd.service", "/lib/systemd/system/zenohd.service", "644"],
]


[[example]]
name = "z_scout"
path = "examples/z_scout.rs"

[[example]]
name = "z_info"
path = "examples/z_info.rs"

[[example]]
name = "z_put"
path = "examples/z_put.rs"

[[example]]
name = "z_put_float"
path = "examples/z_put_float.rs"

[[example]]
name = "z_delete"
path = "examples/z_delete.rs"

[[example]]
name = "z_pub"
path = "examples/z_pub.rs"

[[example]]
name = "z_pub_shm"
path = "examples/z_pub_shm.rs"
required-features = ["shared-memory"]

[[example]]
name = "z_sub"
path = "examples/z_sub.rs"

[[example]]
name = "z_pull"
path = "examples/z_pull.rs"

[[example]]
name = "z_eval"
path = "examples/z_eval.rs"

[[example]]
name = "z_storage"
path = "examples/z_storage.rs"

[[example]]
name = "z_get"
path = "examples/z_get.rs"

[[example]]
name = "z_forward"
path = "examples/z_forward.rs"

[[example]]
name = "z_pub_thr"
path = "examples/z_pub_thr.rs"

[[example]]
name = "z_sub_thr"
path = "examples/z_sub_thr.rs"

[[example]]
name = "z_pub_shm_thr"
path = "examples/z_pub_shm_thr.rs"
required-features = ["shared-memory"]

[[example]]
name = "z_ping"
path = "examples/z_ping.rs"

[[example]]
name = "z_pong"
path = "examples/z_pong.rs"
