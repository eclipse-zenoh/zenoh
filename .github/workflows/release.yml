#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
name: Release

on:
  push:
    branches: ["**"]
  schedule:
    - cron: "0 0 * * 1-5"
  workflow_dispatch:
    inputs:
      live-run:
        type: boolean
        description: If false (or undefined) the workflow runs in dry-run mode (i.e. with no side-effects)
        required: false
      version:
        type: string
        description: Release number. If undefined, the workflow auto-generates a version using git-describe
        required: false

jobs:
  tag:
    name: Bump and tag crates
    uses: eclipse-zenoh/ci/.github/workflows/tag-crates.yml@main
    with:
      repo: ${{ github.repository }}
      live-run: ${{ inputs.live-run }}
      version: ${{ inputs.version }}
      inter-deps-pattern: zenoh.*
    secrets: inherit

  build-debian:
    name: Build Debian packages
    needs: tag
    uses: eclipse-zenoh/ci/.github/workflows/build-crates-debian.yml@main
    with:
      repo: ${{ github.repository }}
      version: ${{ needs.tag.outputs.version }}
      branch: ${{ needs.tag.outputs.branch }}
    secrets: inherit

  build-artifacts:
    name: Build executables and libraries
    needs: tag
    uses: eclipse-zenoh/ci/.github/workflows/build-crates-artifacts.yml@main
    with:
      repo: ${{ github.repository }}
      version: ${{ needs.tag.outputs.version }}
      branch: ${{ needs.tag.outputs.branch }}
      exclude-builds: '[{ build: { target: "x86_64-pc-windows-gnu", os: "windows-2019" } }]'
      artifact-patterns: |
        ^zenohd(\.exe)?$
        ^libzenoh_plugin_(rest|storage_manager)\.(dylib|so)$
        ^zenoh_plugin_(rest|storage_manager)\.dll$
    secrets: inherit

  # NOTE: This tries to mimic the docs.rs build using rustdoc with a nightly toolchain
  build-docs:
    name: Doc generation
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Clone this repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.tag.outputs.version }}

      - name: Install Rust toolchain nightly for docs gen
        run: rustup toolchain install nightly

      - name: generate doc
        # NOTE: Enable 'unstable' feature for doc generation, as done for docs.rs build in zenoh/Cargo.toml
        run: >
          cargo +nightly rustdoc --manifest-path ./zenoh/Cargo.toml --lib --features unstable -j3
          -Z rustdoc-map -Z unstable-options -Z rustdoc-scrape-examples
          --config build.rustdocflags='["-Z", "unstable-options", "--emit=invocation-specific", "--cap-lints", "warn", "--disable-per-crate-search", "--extern-html-root-takes-precedence"]'
        env:
          RUSTDOCFLAGS: -Dwarnings

  publish-cargo:
    name: Publish Cargo crates
    needs: [tag, build-docs]
    uses: eclipse-zenoh/ci/.github/workflows/publish-crates-cargo.yml@main
    with:
      repos: ${{ github.repository }}
      live-run: ${{ inputs.live-run }}
      branch: ${{ needs.tag.outputs.branch }}
      inter-deps-pattern: zenoh.*
    secrets: inherit

  publish-debian:
    name: Publish Debian packages
    needs: [tag, build-debian]
    uses: eclipse-zenoh/ci/.github/workflows/publish-crates-debian.yml@main
    with:
      live-run: ${{ inputs.live-run }}
      version: ${{ needs.tag.outputs.version }}
    secrets: inherit

  publish-homebrew:
    name: Publish Homebrew formulae
    needs: tag
    uses: eclipse-zenoh/ci/.github/workflows/publish-crates-homebrew.yml@main
    with:
      repo: ${{ github.repository }}
      live-run: ${{ inputs.live-run }}
      version: ${{ needs.tag.outputs.version }}
      branch: ${{ needs.tag.outputs.branch }}
      artifact-patterns: |
        ^zenohd$
        ^libzenoh_plugin_rest\.dylib$
        ^libzenoh_plugin_storage_manager\.dylib$
      formulae: |
        zenoh
        zenohd
        zenoh-plugin-rest
        zenoh-plugin-storage-manager
    secrets: inherit

  publish-eclipse:
    name: Publish artifacts to Eclipse downloads
    needs: tag
    uses: eclipse-zenoh/ci/.github/workflows/publish-crates-eclipse.yml@main
    with:
      live-run: ${{ inputs.live-run }}
      version: ${{ needs.tag.outputs.version }}
      name: zenoh
    secrets: inherit

  publish-docker:
    name: Publish Docker image
    needs: tag
    uses: ./.github/workflows/publish-docker.yml
    with:
      live-run: ${{ inputs.live-run }}
      version: ${{ needs.tag.outputs.version }}
    secrets: inherit
