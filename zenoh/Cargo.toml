#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
authors = { workspace = true }
categories = { workspace = true }
description = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
name = "zenoh"
readme = "README.md"
repository = { workspace = true }
rust-version = { workspace = true }
version = { workspace = true }
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[features]
auth_pubkey = ["zenoh-transport/auth_pubkey"]
auth_usrpwd = ["zenoh-transport/auth_usrpwd"]
default = [
  "auth_pubkey",
  "auth_usrpwd",
  "transport_compression",
  "transport_multilink",
  "transport_quic",
  "transport_quic_datagram",
  "transport_tcp",
  "transport_tls",
  "transport_udp",
  "transport_unixsock-stream",
  "transport_ws",
]
internal = [
  "zenoh-config/internal",
  "zenoh-keyexpr/internal",
  "zenoh-protocol/internal",
]
internal_config = []
plugins = []
runtime_plugins = ["plugins"]
shared-memory = [
  "zenoh-buffers/shared-memory",
  "zenoh-protocol/shared-memory",
  "zenoh-shm",
  "zenoh-transport/shared-memory",
]
stats = ["zenoh-transport/stats"]
tracing-instrument = [
  "zenoh-runtime/tracing-instrument",
  "zenoh-task/tracing-instrument",
]
transport_compression = ["zenoh-transport/transport_compression"]
transport_multilink = ["zenoh-transport/transport_multilink"]
transport_quic = ["zenoh-transport/transport_quic"]
transport_quic_datagram = ["zenoh-transport/transport_quic_datagram"]
transport_serial = ["zenoh-transport/transport_serial"]
transport_tcp = ["zenoh-config/transport_tcp", "zenoh-transport/transport_tcp"]
transport_tls = ["zenoh-transport/transport_tls"]
transport_udp = ["zenoh-transport/transport_udp"]
transport_unixpipe = ["zenoh-transport/transport_unixpipe"]
transport_unixsock-stream = ["zenoh-transport/transport_unixsock-stream"]
transport_vsock = ["zenoh-transport/transport_vsock"]
transport_ws = ["zenoh-transport/transport_ws"]
unstable = [
  "internal_config",
  "zenoh-config/unstable",
  "zenoh-keyexpr/unstable",
  "zenoh-protocol/unstable",
]

[dependencies]
ahash = { workspace = true, default-features = true }
arc-swap = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
const_format = { workspace = true }
flume = { workspace = true }
futures = { workspace = true }
git-version = { workspace = true }
itertools = { workspace = true }
json5 = { workspace = true }
lazy_static = { workspace = true }
nonempty-collections = { workspace = true }
once_cell = { workspace = true }
paste = { workspace = true }
petgraph = { workspace = true }
phf = { workspace = true }
rand = { workspace = true, features = ["default"] }
ref-cast = { workspace = true }
serde = { workspace = true, features = ["default"] }
serde_json = { workspace = true }
socket2 = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt", "time"] }
tokio-util = { workspace = true }
tracing = { workspace = true }
uhlc = { workspace = true, features = ["default"] }
vec_map = { workspace = true }
zenoh-buffers = { workspace = true, features = ["std"] }
zenoh-codec = { workspace = true }
zenoh-collections = { workspace = true, features = ["std"] }
zenoh-config = { workspace = true }
zenoh-core = { workspace = true }
zenoh-keyexpr = { workspace = true, features = ["internal"] }
zenoh-link = { workspace = true }
zenoh-link-commons = { workspace = true }
zenoh-macros = { workspace = true }
zenoh-plugin-trait = { workspace = true }
zenoh-protocol = { workspace = true, features = ["std"] }
zenoh-result = { workspace = true }
zenoh-runtime = { workspace = true }
zenoh-shm = { workspace = true, optional = true }
zenoh-sync = { workspace = true }
zenoh-task = { workspace = true }
zenoh-transport = { workspace = true }
zenoh-util = { workspace = true }

[dev-dependencies]
libc = { workspace = true }
tokio = { workspace = true }
zenoh-protocol = { workspace = true, features = ["test"] }

[build-dependencies]
rustc_version = { workspace = true }

[lib]
name = "zenoh"

# For doc generation on docs.rs, activate the "unstable" and "shared-memory" feature to generate their documentation
# NOTE: if you change this, also change it in .github/workflows/ci.yml in "doc" job.
[package.metadata.docs.rs]
features = ["shared-memory", "unstable"]

[package.metadata.deb]
assets = [{ source = "../README.md", dest = "README.md", mode = "644" }]
copyright = "2024 ZettaScale Technology"
depends = "zenohd (=1.6.1), zenoh-plugin-rest (=1.6.1), zenoh-plugin-storage-manager (=1.6.1)"
license-file = ["../LICENSE", "0"]
maintainer = "zenoh-dev@eclipse.org"
maintainer-scripts = ".deb"
name = "zenoh"
section = "net"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(nolocal_thread_not_available)',
] }
