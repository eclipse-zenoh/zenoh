#
# Copyright (c) 2017, 2020 ADLINK Technology Inc.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ADLINK zenoh team, <zenoh@adlink-labs.tech>
#
[package]
name = "zenoh"
version = "0.6.0-dev.0"
repository = "https://github.com/eclipse-zenoh/zenoh"
homepage = "http://zenoh.io"
authors = [
    "kydos <angelo@icorsaro.net>",
    "Julien Enoch <julien@enoch.fr>",
    "Olivier HÃ©cart <olivier.hecart@adlinktech.com>",
    "Luca Cominardi <luca.cominardi@adlinktech.com>",
    "Pierre Avital <pierre.avital@adlinktech.com>",
]
edition = "2018"
license = " EPL-2.0 OR Apache-2.0"
categories = ["network-programming"]
description = "Zenoh: Zero Overhead Pub/sub, Store/Query and Compute."
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[features]
auth_pubkey = ["rsa", "num-traits"]
auth_usrpwd = []
complete_n = []
shared-memory = ["bincode", "shared_memory"]
stats = []
transport_quic = ["quinn", "rcgen", "webpki", "async-std/tokio1"]
transport_tcp = []
transport_tls = ["async-rustls"]
transport_udp = []
transport_unixsock-stream = ["nix"]
default = [
    "auth_pubkey",
    "auth_usrpwd",
    "shared-memory",
    "transport_quic",
    "transport_tcp",
    "transport_tls",
    "transport_udp",
    "transport_unixsock-stream",
]

[dependencies]
zenoh-core = { path = "../zenoh-utils/zenoh-core/" }
zenoh-collections = { path = "../zenoh-utils/zenoh-collections/" }
zenoh-sync = { path = "../zenoh-utils/zenoh-sync/" }
zenoh-util = { path = "../zenoh-utils/zenoh-util" }
zenoh-plugin-trait = { path = "../plugins/zenoh-plugin-trait", default-features = false }
async-global-executor = "2.0.2"
async-rustls = { version = "=0.2.0", optional = true }
async-std = { version = "=1.9.0", default-features = false, features = [
    "attributes",
    "unstable",
] }
async-trait = "0.1.42"
base64 = "0.13.0"
bincode = { version = "1.3.1", optional = true }
clap = "2.33.3"
env_logger = "0.9.0"
event-listener = "2.5.1"
futures = "0.3.12"
futures-lite = "1.11.3"
flume = "0.10.5"
git-version = "0.3.4"
hex = "0.4.2"
http-types = "2.10.0"
json5 = "0.4.1"
lazy_static = "1.4.0"
libloading = "0.7.0"
log = "0.4"
nix = { version = "0.23.0", optional = true }
num-traits = { version = "0.2.14", optional = true }
ordered-float = "2.5.1"
paste = "1.0"
petgraph = "0.6.0"
quinn = { version = "0.7.2", optional = true }
rand = "0.8.3"
rcgen = { version = "0.8.9", optional = true }
regex = "1"
rsa = { version = "0.5.0", optional = true }
serde_json = "1.0"
serde_yaml = "0.8"
serde = "1.0.123"
shared_memory = { version = "=0.12.0", optional = true }
socket2 = "0.4.0"
uhlc = "0.4.0"
uuid = { version = "0.8.2", features = ["v4"] }
validated_struct = { version = "0.1", features = ["json5", "serde_json"] }
vec_map = "0.8.2"
webpki = { version = "0.22.0", features = ["std"], optional = true }

[dev-dependencies]
clap = "2.33.3"
criterion = "0.3.4"

[build-dependencies]
rustc_version = "0.4.0"

[lib]
name = "zenoh"

[[bin]]
name = "zenohd"
test = false
bench = false

[package.metadata.deb]
name = "zenohd"
maintainer = "zenoh-dev@eclipse.org"
copyright = "2017, 2021 ADLINK Technology Inc."
section = "net"
license-file = ["../LICENSE", "0"]
depends = "$auto"
maintainer-scripts = "zenoh/.deb"
assets = [
    # binary
    ["target/release/zenohd", "/usr/bin/", "755"],
    # service
    [".service/zenohd.service", "/lib/systemd/system/zenohd.service", "644"],
]


[[example]]
name = "z_scout"
path = "examples/z_scout.rs"

[[example]]
name = "z_info"
path = "examples/z_info.rs"

[[example]]
name = "z_put"
path = "examples/z_put.rs"

[[example]]
name = "z_put_float"
path = "examples/z_put_float.rs"

[[example]]
name = "z_delete"
path = "examples/z_delete.rs"

[[example]]
name = "z_pub"
path = "examples/z_pub.rs"

[[example]]
name = "z_pub_shm"
path = "examples/z_pub_shm.rs"
required-features = ["shared-memory"]

[[example]]
name = "z_sub"
path = "examples/z_sub.rs"

[[example]]
name = "z_pull"
path = "examples/z_pull.rs"

[[example]]
name = "z_eval"
path = "examples/z_eval.rs"

[[example]]
name = "z_storage"
path = "examples/z_storage.rs"

[[example]]
name = "z_get"
path = "examples/z_get.rs"

[[example]]
name = "z_forward"
path = "examples/z_forward.rs"

[[example]]
name = "z_pub_thr"
path = "examples/z_pub_thr.rs"

[[example]]
name = "z_sub_thr"
path = "examples/z_sub_thr.rs"

[[example]]
name = "z_pub_shm_thr"
path = "examples/z_pub_shm_thr.rs"
required-features = ["shared-memory"]

[[example]]
name = "z_ping"
path = "examples/z_ping.rs"

[[example]]
name = "z_pong"
path = "examples/z_pong.rs"

[[bench]]
name = "codec_bench"
harness = false

[[bench]]
name = "rwbuf_bench"
harness = false

[[bench]]
name = "key_expr_bench"
harness = false

[[bench]]
name = "data_creation"
harness = false

[[bench]]
name = "frame_codec"
harness = false

[[bench]]
name = "tables_bench"
harness = false
