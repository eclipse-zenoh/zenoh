#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
rust-version = { workspace = true }
name = "zplugin-example"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }

[lib]
# When auto-detecting the "example" plugin, `zenohd` will look for a dynamic library named "zplugin_example"
# `zenohd` will expect the file to be named according to OS conventions:
#   - libzplugin_example.so on linux
#   - libzplugin_example.dylib on macOS
#   - zplugin_example.dll on Windows
name = "zplugin_example"
# This crate type will make `cargo` output a dynamic library instead of a rust static library
crate-type = ["cdylib"]

[dependencies]
async-std = { workspace = true, features = ["default"] }
clap = { workspace = true }
env_logger = { workspace = true }
futures = { workspace = true }
log = { workspace = true }
serde_json = { workspace = true }
zenoh = { path = "../../zenoh/", default-features = false }
zenoh-core = { path = "../../commons/zenoh-core/" }
zenoh-plugin-trait = { path = "../zenoh-plugin-trait/" }
zenoh-result = { path = "../../commons/zenoh-result/" }
zenoh-util = { path = "../../commons/zenoh-util/" }
