#
# Copyright (c) 2022 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
rust-version = { workspace = true }
name = "zenoh-protocol"
version = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
categories = { workspace = true }
description = "Internal crate for zenoh."

[features]
default = ["std"]
std = [
    "hex/std",
    "rand?/std",
    "rand?/std_rng",
    "serde/std",
    "uhlc/std",
    "uuid/std"
]
test = ["rand", "zenoh-buffers/test"]
shared-memory = ["std"]
complete_n = []
defmt = [
    "dep:defmt",
    "uhlc/defmt",
    "zenoh-buffers/defmt"
]

[dependencies]
defmt = { workspace = true, optional = true }
hex = { workspace = true, default-features = false, features = ["alloc"] }
rand = { workspace = true, default-features = false, features = ["alloc", "getrandom"], optional = true }
serde = { workspace = true, default-features = false, features = ["alloc"] }
uhlc = { workspace = true, default-features = false }
uuid = { workspace = true, default-features = false } # Needs a getrandom::getrandom() custom implementation on embedded (in root crate)
zenoh-buffers = { path = "../zenoh-buffers/", default-features = false }
zenoh-core = { path = "../zenoh-core/" }

[dev-dependencies]
lazy_static = { workspace = true }
zenoh-protocol = { path = ".", features = ["test"] }
