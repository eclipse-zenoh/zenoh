#
# Copyright (c) 2022 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
rust-version = { workspace = true }
name = "zenoh-util"
version = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
authors = [
    "kydos <angelo@icorsaro.net>",
    "Luca Cominardi <luca.cominardi@zettascale.tech>",
    "Pierre Avital <pierre.avital@zettascale.tech>",
]
edition = { workspace = true }
license = { workspace = true }
categories = { workspace = true }
description = "Internal crate for zenoh."
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[features]
default = ["std"]
std = [
    "async-std",
    "async-trait",
    "flume",
    "home",
    "humantime",
    "lazy_static",
    "libloading",
    "log",
    "shellexpand",
    "zenoh-protocol/std",
    "zenoh-result/std",
]

[dependencies]
async-std = { workspace = true, features = ["default", "unstable"], optional = true }
async-trait = { workspace = true, optional = true }
flume = { workspace = true, optional = true }
home = { workspace = true, optional = true }
humantime = { workspace = true, optional = true }
keyed-set = { workspace = true }
lazy_static = { workspace = true, optional = true }
libloading = { workspace = true, optional = true }
log = { workspace = true, optional = true }
token-cell = { workspace = true } # FEATURE (it's 'reversed' though, which means that we can ONLY use the no_std version)
shellexpand = { workspace = true, optional = true }
zenoh-core = { path = "../zenoh-core/" } # NOT no_std
zenoh-protocol = { path = "../zenoh-protocol/", default-features = false }
zenoh-result = { path = "../zenoh-result/", default-features = false }

[target.'cfg(not(features = "std"))'.dependencies]
hashbrown = { workspace = true }

[target.'cfg(windows)'.dependencies]
winapi = { workspace = true }

[target.'cfg(unix)'.dependencies]
libc = { workspace = true }
pnet = { workspace = true }
pnet_datalink = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
rand = { workspace = true }
zenoh-protocol = { path = "../zenoh-protocol/", features = ["test"] }

[[bench]]
name = "keyexpr_tree"
harness = false
